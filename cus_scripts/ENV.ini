#====================================================================================================================================================================================
# 环境变量赋值 环境变量区分大小写 为与一般代码有所区分,变量名称及自定义的名称最好使用大写英文字母（首个字母或名称整体）,如同workflow使用的专有名词
# 环境变量命名格式：
# .ini格式：变量名称="变量值"   设置全局变量或者workflow开启时必须的变量或者开始可以使用的变量
# .yml格式:$shell 变量（文件）名 变量文件名 &GITHUB_ENV（自定义环境变量名称及其值）&GITHUB_PATH（自定义文件路径名称及其值）&GITHUB_OUTPUT（自定义步骤输出参数名称及其值）&GITHUB_STEP_SUMMARY
#         特用变量 step  只限当前step使用
#                    ENV:变量名称:  变量值    注意:(冒号)后面有一个空格   
#         全局变量 workflwow
#                    ENV:变量名称: 变量值
#                          step  run:
#                                  echo "变量名称=${变量名称}" >> $GITHUB_ENV   # workflow ENV:设置过的 
#                                  echo "变量名称=变量值" >> $GITHUB_ENV        # 当前step才出现的可以使用的变量,设置后以便后面的step应用  当前step不可用 创建或更新环境变量的当前及之前的步骤无权访问新值
#                                                                                 后续步骤都可以访问                              
# 变量名称或命令中出现的自定义名称必须为英文字母拼写的单词,且有多个单词构成时单词间必须加连字符"_"或“-”.其他环境引用时必须与此处的变量名称完全一致,包括大小写.
# 变量值种类:
#     自定义文件路径  GitHub官方强烈建议操作使用环境变量访问文件系统，而非使用硬编码的文件路径 https://docs.github.com/cn/actions/learn-github-actions/environment-variables
#         .yml: - name: Clone Source Code  
#                  run:  
#                    echo "PATH_Package=${GITHUB_WORKSPACE}/config/package_config" >> $GITHUB_ENV
#                    echo "PATH_Device=${GITHUB_WORKSPACE}/config/device_config" >> $GITHUB_ENV
#                    echo "PATH_Custom=${GITHUB_WORKSPACE}/custom_files" >> $GITHUB_ENV
#                    echo "PATH_Comscript=${GITHUB_WORKSPACE}/script/com_scripts" >> $GITHUB_ENV
#                    echo "PATH_Cusscript=${GITHUB_WORKSPACE}/script/cus_scripts" >> $GITHUB_ENV    自定义设置文件（夹）  
#     编译步骤功能开关  true=开启 false=关闭 .yml中应用if命令开关所在step if: env.变量名称 == '变量值'
#     时间变量值   $(date "+%Y%m%d%H%M%S")    $(date +'%m-%d')    
# 此处增减变量时应同步增减.yml文件变量赋值步骤中的相关内容：引用的step
#====================================================================================================================================================================================
REPO_URL="https://github.com/lede-project/source"     # OpenWrt源码链接（若要修改此处需要根据源码结构同步修改cus_script文件夹下相关.sh）
REPO_BRANCH="openwrt-19.07"                                # OpenWrt源码分支（若要修改此处需要根据源码结构同步修改cus_script文件夹下相关.sh)
COMPILE_INFORMATION="true"                          # 显示编译信息
UPLOAD_CONFIG="false"                                # 上传【.config】配置文件到github actions Runs Artifacts）有保存时限
UPLOAD_BIN_DIR="false"                               # 上传【bin文件夹】(.bin+.ipk)到github actions Runs Artifacts 有保存时限
UPLOAD_Artifacts="false"                             # 上传固件到github actions Runs Artifacts 有保存时限
UPLOAD_COWTRANSFER="false"                           # 上传固件到【CowTransfer】https://cowtransfer.com 下载链接在上传功能开启后可以在actions-run-Annotation actions-run-log及release tag中找到 保存时限24小时
UPLOAD_WETRANSFER="false"                            # 上传固件到【WeTransfer】https://wetransfer.com/  下载链接在上传功能开启后可以在actions-run-Annotation actions-run-log及release tag中找到 保存时限7天 
UPLOAD_RELEASE="true"                               # 发布固件到github Releases(tag and Assets) 可永久保存

